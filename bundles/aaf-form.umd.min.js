!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/material/checkbox"),require("@angular/material/table"),require("@angular/material/select"),require("@angular/material/snack-bar"),require("@angular/material/datepicker"),require("@angular/material/autocomplete"),require("@angular/material/radio"),require("@angular/material-moment-adapter"),require("@angular/material"),require("@angular/common"),require("ngx-ui-loader"),require("@angular/forms"),require("@angular/core")):"function"==typeof define&&define.amd?define("aaf-form",["exports","@angular/material/checkbox","@angular/material/table","@angular/material/select","@angular/material/snack-bar","@angular/material/datepicker","@angular/material/autocomplete","@angular/material/radio","@angular/material-moment-adapter","@angular/material","@angular/common","ngx-ui-loader","@angular/forms","@angular/core"],t):t(e["aaf-form"]={},e.ng.material.checkbox,e.ng.material.table,e.ng.material.select,e.ng.material["snack-bar"],e.ng.material.datepicker,e.ng.material.autocomplete,e.ng.material.radio,e.ng["material-moment-adapter"],e.ng.material,e.ng.common,e.ngxUiLoader,e.ng.forms,e.ng.core)}(this,function(e,t,a,n,o,i,r,l,d,u,s,p,c,m){"use strict";var f=(g.decorators=[{type:m.Injectable,args:[{providedIn:"root"}]}],g.ctorParameters=function(){return[]},g.ngInjectableDef=m.defineInjectable({factory:function(){return new g},token:g,providedIn:"root"}),g);function g(){}var h=(b.decorators=[{type:m.NgModule,args:[{imports:[s.CommonModule,u.MatToolbarModule,u.MatButtonModule,u.MatCardModule,u.MatInputModule,u.MatDialogModule,a.MatTableModule,u.MatMenuModule,u.MatIconModule,u.MatProgressSpinnerModule,u.MatGridListModule,u.MatPaginatorModule,n.MatSelectModule,o.MatSnackBarModule,i.MatDatepickerModule,t.MatCheckboxModule,u.MatSortModule,u.MatFormFieldModule,u.MatDividerModule,u.MatTooltipModule,r.MatAutocompleteModule,l.MatRadioModule,d.MatMomentDateModule,u.MatListModule,u.MatOptionModule,u.MatTabsModule,u.MatButtonToggleModule,u.MatChipsModule,u.MatExpansionModule,u.MatRippleModule,u.MatSidenavModule,u.MatSliderModule],exports:[s.CommonModule,u.MatToolbarModule,u.MatButtonModule,u.MatCardModule,u.MatInputModule,u.MatDialogModule,a.MatTableModule,u.MatMenuModule,u.MatIconModule,u.MatProgressSpinnerModule,u.MatGridListModule,u.MatPaginatorModule,n.MatSelectModule,o.MatSnackBarModule,i.MatDatepickerModule,t.MatCheckboxModule,u.MatSortModule,u.MatFormFieldModule,u.MatDividerModule,u.MatTooltipModule,r.MatAutocompleteModule,l.MatRadioModule,d.MatMomentDateModule,u.MatListModule,u.MatOptionModule,u.MatTabsModule,u.MatButtonToggleModule,u.MatChipsModule,u.MatExpansionModule,u.MatRippleModule,u.MatSidenavModule,u.MatSliderModule]}]}],b);function b(){}var v=(M.prototype.getFieldData=function(){return this.getDefaultFields(),this.getDefaultFormConfigs(),{defaultFields:this.regConfig,defaultFormConfig:this.createUserForm}},M.prototype.getDefaultFormConfigs=function(){return this.createUserForm={name:"createUser","class":"createUser"},this.createUserForm},M.prototype.getDefaultFields=function(){return this.regConfig=[{type:"input",label:"First name",inputType:"text",name:"fname",placeHolder:"Name",validations:[{name:"required",validator:c.Validators.required,message:"First name is Required"},{name:"pattern",validator:c.Validators.pattern("^[a-zA-Z]+$"),message:"Accept only text"}]},{type:"date",label:"Date Of Birth",name:"dob",placeHolder:"dd-mm-yy",validations:[{name:"required",validator:c.Validators.required,message:"Date of Birth is Required"}]},{type:"input",label:"Mobile Number",inputType:"text",name:"mobileno",placeHolder:"Number",validations:[{name:"required",validator:c.Validators.required,message:"Mobile Number is Required"},{name:"pattern",validator:c.Validators.pattern("^[0-9]+$"),message:"Accept only numbers"}]},{type:"input",label:"Last name",inputType:"text",name:"lname",placeHolder:"Name",validations:[{name:"required",validator:c.Validators.required,message:"Last name is Required"},{name:"pattern",validator:c.Validators.pattern("^[a-zA-Z]+$"),message:"Accept only text"}]},{type:"select",label:"Role",name:"role",value:"",options:[{label:"Select",value:""},{label:"Admin",value:"Admin"},{label:"Agent",value:"Agent"}],validations:[{name:"required",validator:c.Validators.required,message:"Role is Required"}]},{type:"select",label:"Primary Language",name:"primarylanguage",value:"",options:[{label:"Select",value:""},{label:"Swahili",value:"Swahili"}],validations:[{name:"required",validator:c.Validators.required,message:"Primary Language is Required"}]},{type:"button",label:"Create"}],this.regConfig},M);function M(){}var y=(C.prototype.getFormConfiguration=function(){return function e(){return new v}().getFieldData()},C);function C(){}function F(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var n,o,i=a.call(e),r=[];try{for(;(void 0===t||0<t--)&&!(n=i.next()).done;)r.push(n.value)}catch(l){o={error:l}}finally{try{n&&!n.done&&(a=i["return"])&&a.call(i)}finally{if(o)throw o.error}}return r}var O=(S.prototype.ngOnInit=function(){},S.prototype.toggleAllSelection=function(){this.allSelected.selected?this.group.get(this.field.name).patchValue(function a(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(F(arguments[t]));return e}(this.field.options.map(function(e){return e.value}),[0])):this.group.get(this.field.name).patchValue([])},S.prototype.tosslePerOne=function(e){return 0==this.field.isMultiselect||(this.allSelected.selected?(this.allSelected.deselect(),!1):void(this.group.get(this.field.name).value.length==this.field.options.length&&this.allSelected.select()))},S.decorators=[{type:m.Component,args:[{selector:"app-select",template:'\n<mat-form-field class="demo-full-width margin-top" [formGroup]="group" *ngIf="field.visibility">\n<mat-select [placeholder]="field.label" [formControlName]="field.name" [required]="field.validations" [multiple]="field.isMultiselect">\n\n<ng-container *ngIf="field.isMultiselect;then multiSelectTemplate else simpleSelectTemplate"></ng-container>\n<ng-template #multiSelectTemplate>\n<mat-option *ngIf="field.isMultiselect" #allSelected (click)="toggleAllSelection()" [value]="0">All</mat-option>\n<mat-option (click)="tosslePerOne(allSelected.viewValue)" *ngFor="let item of field.options" [value]="item.value">{{item.label}}</mat-option>\n</ng-template>\n<ng-template #simpleSelectTemplate>\n<mat-option *ngFor="let item of field.options" [value]="item.value">{{item.label}}</mat-option>\n</ng-template>\n</mat-select>\n<ng-container *ngFor="let validation of field.validations;" ngProjectAs="mat-error">\n<mat-error *ngIf="group.get(field.name).hasError(validation.name)">{{validation.message}}</mat-error>\n</ng-container>\n</mat-form-field>  \n'}]}],S.ctorParameters=function(){return[]},S.propDecorators={allSelected:[{type:m.ViewChild,args:["allSelected"]}]},S);function S(){}var I=(Object.defineProperty(j.prototype,"value",{get:function(){return this.form.value},enumerable:!0,configurable:!0}),j.prototype.changeToEmptyState=function(a){var n=this;this.deeplyClonedObject.map(function(e,t){e.name==a&&(n.deeplyClonedObject[t].options=[])})},j.prototype.onChanges=function(e){var i=this;0<this.onChangeEventsObj.length&&this.onChangeEventsObj.map(function(o,e){i.form.get(o.source).valueChanges.subscribe(function(n){o.changeType?""!=n?(o.dependent&&0<o.dependent.length&&o.dependent.map(function(e){i.enableField(e)}),o.changeType&&0<o.changeType.length&&(o.callApi?i.listActions[o.actionDataProvider]().subscribe(function(e){var a=e.filter(function(e){return(e.value.id?e.value.id:e.value)==(n.id?n.id:n)});0<a.length&&o.changeType.map(function(e,t){e.source==a[0].type&&(e.removeDestination.map(function(a){i.disableField(a),i.deeplyClonedObject.map(function(e,t){e.name==a&&(i.deeplyClonedObject[t].visibility=!1)})}),e.addDestination.map(function(a){i.enableField(a),i.deeplyClonedObject.map(function(e,t){e.name==a&&(i.deeplyClonedObject[t].visibility=!0)})}))})}):o.changeType.map(function(e,t){e.source==n&&(e.removeDestination.map(function(a){i.disableField(a),i.deeplyClonedObject.map(function(e,t){e.name==a&&(i.deeplyClonedObject[t].visibility=!1)})}),e.addDestination.map(function(a){i.enableField(a),i.deeplyClonedObject.map(function(e,t){e.name==a&&(i.deeplyClonedObject[t].visibility=!0)})}))}))):o.dependent&&0<o.dependent.length&&o.dependent.map(function(e){i.disableField(e)}):(o.dependent&&0<o.dependent.length&&o.dependent.map(function(e){i.changeToEmptyState(e)}),""!=n&&i.listActions[o.actionDataProvider](n).subscribe(function(e){i.updateFieldConfiguration(o.destination,e)},function(e){var t=[];t.push(i.blankDataObj),t.push(i.staticData),i.updateFieldConfiguration(o.destination,t)}))})})},j.prototype.disableField=function(e){return this.form.get(e).disable(),!0},j.prototype.enableField=function(e){return this.form.get(e).enable(),!0},j.prototype.ngOnInit=function(){var o=this;this.deeplyClonedObject=JSON.parse(JSON.stringify(this.fields)),this.deeplyClonedObject.map(function(e,t){if("select"==e.type&&e.options&&0==e.optionsData){var a={actionDataProvider:"get"+e.name,source:e.name,localstorage:!0,destination:e.name};if(o.initialEventsObj.push(a),e.onChange){var n={source:e.name,destination:e.onChange.destination,actionDataProvider:"get"+e.onChange.destination,localstorage:e.onChange.localstorage,dependent:e.onChange.dependent,changeType:e.onChange.changeType?e.onChange.changeType:"",callApi:!!e.onChange.callApi&&e.onChange.callApi};o.onChangeEventsObj.push(n)}}}),this.form=this.createControl(),this.listActions=this.actionProvider,this.getInitilizedValues(),this.onChanges(this.form)},j.prototype.updateFieldConfiguration=function(a,n){var o=this;this.deeplyClonedObject.map(function(e,t){e.name==a&&(o.deeplyClonedObject[t].options=n)})},Object.defineProperty(j.prototype,"staticData",{get:function(){return{label:"Sales User",value:"sales_user"}},enumerable:!0,configurable:!0}),Object.defineProperty(j.prototype,"blankDataObj",{get:function(){return{label:"Select",value:""}},enumerable:!0,configurable:!0}),j.prototype.getInitilizedValues=function(){var a=this;0<this.initialEventsObj.length&&this.initialEventsObj.map(function(t,e){a.ngxService.start(),a.listActions[t.actionDataProvider]().subscribe(function(e){a.updateFieldConfiguration(t.source,e)}),a.ngxService.stop()})},j.prototype.onSubmit=function(e){e.preventDefault(),e.stopPropagation(),this.form.valid?this.submit.emit(this.form.value):this.validateAllFormFields(this.form)},j.prototype.createControl=function(){var a=this,n=this.fb.group({});return this.deeplyClonedObject.forEach(function(e){if("button"!==e.type){var t=a.fb.control({value:e.value,disabled:e.disabled},a.bindValidations(e.validations||[]));n.addControl(e.name,t)}}),n},j.prototype.bindValidations=function(e){if(0<e.length){var t=[];return e.forEach(function(e){t.push(e.validator)}),c.Validators.compose(t)}return null},j.prototype.validateAllFormFields=function(t){Object.keys(t.controls).forEach(function(e){t.get(e).markAsTouched({onlySelf:!0})})},j.decorators=[{type:m.Component,args:[{selector:"aaf-form",template:'\n  <form [class]="formInfo.class" [name]="formInfo.name" [formGroup]="form" (submit)="onSubmit($event)">\n  <ng-container *ngFor="let field of deeplyClonedObject;" aafFormField [field]="field" [group]="form">\n  </ng-container>\n  </form>\n  ',providers:[y]}]}],j.ctorParameters=function(){return[{type:c.FormBuilder},{type:y},{type:p.NgxUiLoaderService}]},j.propDecorators={fields:[{type:m.Input}],formInfo:[{type:m.Input}],submit:[{type:m.Output}],actionProvider:[{type:m.Input}],formData:[{type:m.ViewChild,args:[O]}]},j);function j(e,t,a){this.fb=e,this.defaultConfig=t,this.ngxService=a,this.submit=new m.EventEmitter,this.initialEventsObj=[],this.onChangeEventsObj=[]}var D=(k.prototype.ngOnInit=function(){},k.decorators=[{type:m.Component,args:[{selector:"app-input",template:'\n<mat-form-field class="demo-full-width" [formGroup]="group" *ngIf="field.visibility">\n<mat-label>{{field.label}}</mat-label>\n<input [id]="field.name" matInput [formControlName]="field.name" [placeholder]="field.placeHolder" [type]="field.inputType" [required]="field.validations">\n<ng-container *ngFor="let validation of field.validations;" ngProjectAs="mat-error">\n<mat-error *ngIf="group.get(field.name).hasError(validation.name)">{{validation.message}}</mat-error>\n</ng-container>\n</mat-form-field>\n'}]}],k.ctorParameters=function(){return[]},k);function k(){}var q=(P.prototype.ngOnInit=function(){},P.decorators=[{type:m.Component,args:[{selector:"app-button",template:'\n<div [ngClass]="[\'demo-full-width\',\'margin-top\',field.class]" [formGroup]="group">\n<button type="submit" color="primary" class="choose_file">{{field.label}}</button>\n</div>\n'}]}],P.ctorParameters=function(){return[]},P);function P(){}var x=(A.prototype.ngOnInit=function(){},A.decorators=[{type:m.Component,args:[{selector:"app-date",template:'\n<mat-form-field class="demo-full-width margin-top" [formGroup]="group" *ngIf="field.visibility">\n<mat-label>{{field.label}}</mat-label>\n<input matInput [matDatepicker]="picker" [formControlName]="field.name" [placeholder]="field.placeHolder" [required]="field.validations">\n<mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n<mat-datepicker #picker></mat-datepicker>\n<mat-hint></mat-hint>\n<ng-container *ngFor="let validation of field.validations;" ngProjectAs="mat-error">\n<mat-error *ngIf="group.get(field.name).hasError(validation.name)">{{validation.message}}</mat-error>\n</ng-container>\n</mat-form-field>\n'}]}],A.ctorParameters=function(){return[]},A);function A(){}var T=(E.prototype.ngOnInit=function(){},E.decorators=[{type:m.Component,args:[{selector:"app-radiobutton",template:'\n<div class="demo-full-width margin-top" [formGroup]="group" *ngIf="field.visibility">\n<label class="radio-label-padding">{{field.label}}:</label>\n<mat-radio-group [formControlName]="field.name">\n<mat-radio-button *ngFor="let item of field.options" [value]="item">{{item}}</mat-radio-button>\n</mat-radio-group>\n</div>\n'}]}],E.ctorParameters=function(){return[]},E);function E(){}var V=(R.prototype.ngOnInit=function(){},R.decorators=[{type:m.Component,args:[{selector:"app-checkbox",template:'\n<div class="demo-full-width margin-top" [formGroup]="group" *ngIf="field.visibility">\n<mat-checkbox [formControlName]="field.name">{{field.label}}</mat-checkbox>\n</div>\n'}]}],R.ctorParameters=function(){return[]},R);function R(){}var w={input:D,button:q,select:O,date:x,radiobutton:T,checkbox:V},N=(L.prototype.ngOnInit=function(){var e=this.resolver.resolveComponentFactory(w[this.field.type]);this.componentRef=this.container.createComponent(e),this.componentRef.instance.field=this.field,this.componentRef.instance.group=this.group},L.prototype.handleChangeEvent=function(e){console.log(e)},L.decorators=[{type:m.Directive,args:[{selector:"[aafFormField]"}]}],L.ctorParameters=function(){return[{type:m.ComponentFactoryResolver},{type:m.ViewContainerRef}]},L.propDecorators={field:[{type:m.Input}],group:[{type:m.Input}]},L);function L(e,t){this.resolver=e,this.container=t}var B=(G.decorators=[{type:m.NgModule,args:[{declarations:[D,q,O,x,T,V,N,I],imports:[s.CommonModule,c.FormsModule,c.ReactiveFormsModule,h,p.NgxUiLoaderModule],entryComponents:[D,q,O,x,T,V],exports:[I]}]}],G);function G(){}e.AafFormComponent=I,e.AafFormService=f,e.AafFormModule=B,e.ɵh=N,e.ɵd=q,e.ɵg=V,e.ɵe=x,e.ɵc=D,e.ɵf=T,e.ɵb=O,e.ɵa=y,e.ɵi=h,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=aaf-form.umd.min.js.map